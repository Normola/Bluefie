// Mocks generated by Mockito 5.4.4 from annotations
// in blufie_ui/test/unit/services/app_lifecycle_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:developer' as _i18;
import 'dart:ui' as _i6;

import 'package:blufie_ui/models/app_settings.dart' as _i2;
import 'package:blufie_ui/models/bluetooth_device_record.dart' as _i13;
import 'package:blufie_ui/services/bluetooth_scanning_service.dart' as _i12;
import 'package:blufie_ui/services/settings_service.dart' as _i14;
import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter/gestures.dart' as _i8;
import 'package:flutter/rendering.dart' as _i9;
import 'package:flutter/scheduler.dart' as _i16;
import 'package:flutter/services.dart' as _i7;
import 'package:flutter/src/widgets/binding.dart' as _i15;
import 'package:flutter/src/widgets/focus_manager.dart' as _i5;
import 'package:flutter/src/widgets/framework.dart' as _i10;
import 'package:flutter/src/widgets/platform_menu_bar.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppSettings_0 extends _i1.SmartFake implements _i2.AppSettings {
  _FakeAppSettings_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformMenuDelegate_1 extends _i1.SmartFake
    implements _i3.PlatformMenuDelegate {
  _FakePlatformMenuDelegate_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueNotifier_2<T> extends _i1.SmartFake
    implements _i4.ValueNotifier<T> {
  _FakeValueNotifier_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusManager_3 extends _i1.SmartFake implements _i5.FocusManager {
  _FakeFocusManager_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSingletonFlutterWindow_4 extends _i1.SmartFake
    implements _i6.SingletonFlutterWindow {
  _FakeSingletonFlutterWindow_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformDispatcher_5 extends _i1.SmartFake
    implements _i6.PlatformDispatcher {
  _FakePlatformDispatcher_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHardwareKeyboard_6 extends _i1.SmartFake
    implements _i7.HardwareKeyboard {
  _FakeHardwareKeyboard_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKeyEventManager_7 extends _i1.SmartFake
    implements _i7.KeyEventManager {
  _FakeKeyEventManager_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBinaryMessenger_8 extends _i1.SmartFake
    implements _i7.BinaryMessenger {
  _FakeBinaryMessenger_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelBuffers_9 extends _i1.SmartFake
    implements _i6.ChannelBuffers {
  _FakeChannelBuffers_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestorationManager_10 extends _i1.SmartFake
    implements _i7.RestorationManager {
  _FakeRestorationManager_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_11 extends _i1.SmartFake implements Duration {
  _FakeDuration_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePointerRouter_12 extends _i1.SmartFake implements _i8.PointerRouter {
  _FakePointerRouter_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureArenaManager_13 extends _i1.SmartFake
    implements _i8.GestureArenaManager {
  _FakeGestureArenaManager_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePointerSignalResolver_14 extends _i1.SmartFake
    implements _i8.PointerSignalResolver {
  _FakePointerSignalResolver_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSamplingClock_15 extends _i1.SmartFake implements _i8.SamplingClock {
  _FakeSamplingClock_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRenderView_16 extends _i1.SmartFake implements _i9.RenderView {
  _FakeRenderView_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMouseTracker_17 extends _i1.SmartFake implements _i9.MouseTracker {
  _FakeMouseTracker_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessibilityFeatures_18 extends _i1.SmartFake
    implements _i6.AccessibilityFeatures {
  _FakeAccessibilityFeatures_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_19 extends _i1.SmartFake implements _i10.Widget {
  _FakeWidget_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeFuture_20<T1> extends _i1.SmartFake implements _i11.Future<T1> {
  _FakeFuture_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeViewConfiguration_21 extends _i1.SmartFake
    implements _i9.ViewConfiguration {
  _FakeViewConfiguration_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSceneBuilder_22 extends _i1.SmartFake implements _i6.SceneBuilder {
  _FakeSceneBuilder_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePictureRecorder_23 extends _i1.SmartFake
    implements _i6.PictureRecorder {
  _FakePictureRecorder_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCanvas_24 extends _i1.SmartFake implements _i6.Canvas {
  _FakeCanvas_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSemanticsHandle_25 extends _i1.SmartFake
    implements _i9.SemanticsHandle {
  _FakeSemanticsHandle_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSemanticsUpdateBuilder_26 extends _i1.SmartFake
    implements _i6.SemanticsUpdateBuilder {
  _FakeSemanticsUpdateBuilder_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BluetoothScanningService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothScanningService extends _i1.Mock
    implements _i12.BluetoothScanningService {
  MockBluetoothScanningService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Stream<int> get deviceCountStream => (super.noSuchMethod(
        Invocation.getter(#deviceCountStream),
        returnValue: _i11.Stream<int>.empty(),
      ) as _i11.Stream<int>);

  @override
  _i11.Stream<List<_i13.BluetoothDeviceRecord>> get recentDevicesStream =>
      (super.noSuchMethod(
        Invocation.getter(#recentDevicesStream),
        returnValue: _i11.Stream<List<_i13.BluetoothDeviceRecord>>.empty(),
      ) as _i11.Stream<List<_i13.BluetoothDeviceRecord>>);

  @override
  bool get isServiceRunning => (super.noSuchMethod(
        Invocation.getter(#isServiceRunning),
        returnValue: false,
      ) as bool);

  @override
  bool get isScanning => (super.noSuchMethod(
        Invocation.getter(#isScanning),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> startContinuousScanning() => (super.noSuchMethod(
        Invocation.method(
          #startContinuousScanning,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> stopContinuousScanning() => (super.noSuchMethod(
        Invocation.method(
          #stopContinuousScanning,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i13.BluetoothDeviceRecord>> getAllStoredDevices() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllStoredDevices,
          [],
        ),
        returnValue: _i11.Future<List<_i13.BluetoothDeviceRecord>>.value(
            <_i13.BluetoothDeviceRecord>[]),
      ) as _i11.Future<List<_i13.BluetoothDeviceRecord>>);

  @override
  _i11.Future<List<_i13.BluetoothDeviceRecord>> getUniqueDevices() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUniqueDevices,
          [],
        ),
        returnValue: _i11.Future<List<_i13.BluetoothDeviceRecord>>.value(
            <_i13.BluetoothDeviceRecord>[]),
      ) as _i11.Future<List<_i13.BluetoothDeviceRecord>>);

  @override
  _i11.Future<List<_i13.BluetoothDeviceRecord>> getDevicesByMacAddress(
          String? macAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDevicesByMacAddress,
          [macAddress],
        ),
        returnValue: _i11.Future<List<_i13.BluetoothDeviceRecord>>.value(
            <_i13.BluetoothDeviceRecord>[]),
      ) as _i11.Future<List<_i13.BluetoothDeviceRecord>>);

  @override
  _i11.Future<int> getTotalDeviceCount() => (super.noSuchMethod(
        Invocation.method(
          #getTotalDeviceCount,
          [],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> getUniqueDeviceCount() => (super.noSuchMethod(
        Invocation.method(
          #getUniqueDeviceCount,
          [],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> cleanupOldData({int? daysToKeep}) => (super.noSuchMethod(
        Invocation.method(
          #cleanupOldData,
          [],
          {#daysToKeep: daysToKeep},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsService extends _i1.Mock implements _i14.SettingsService {
  MockSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Stream<_i2.AppSettings> get settingsStream => (super.noSuchMethod(
        Invocation.getter(#settingsStream),
        returnValue: _i11.Stream<_i2.AppSettings>.empty(),
      ) as _i11.Stream<_i2.AppSettings>);

  @override
  _i2.AppSettings get currentSettings => (super.noSuchMethod(
        Invocation.getter(#currentSettings),
        returnValue: _FakeAppSettings_0(
          this,
          Invocation.getter(#currentSettings),
        ),
      ) as _i2.AppSettings);

  @override
  _i11.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateSettings(_i2.AppSettings? newSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSettings,
          [newSettings],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateAutoScanning(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #updateAutoScanning,
          [enabled],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateBatteryOptimization(
    bool? enabled,
    int? thresholdPercent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBatteryOptimization,
          [
            enabled,
            thresholdPercent,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateScanInterval(int? seconds) => (super.noSuchMethod(
        Invocation.method(
          #updateScanInterval,
          [seconds],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateDataRetention(int? days) => (super.noSuchMethod(
        Invocation.method(
          #updateDataRetention,
          [days],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateLocationTracking(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocationTracking,
          [enabled],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateVerboseLogging(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #updateVerboseLogging,
          [enabled],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateNotifications(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #updateNotifications,
          [enabled],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateAutoScanWhenPluggedIn(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAutoScanWhenPluggedIn,
          [enabled],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> resetToDefaults() => (super.noSuchMethod(
        Invocation.method(
          #resetToDefaults,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WidgetsBinding].
///
/// See the documentation for Mockito's code generation for more information.
class MockWidgetsBinding extends _i1.Mock implements _i15.WidgetsBinding {
  MockWidgetsBinding() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.PlatformMenuDelegate get platformMenuDelegate => (super.noSuchMethod(
        Invocation.getter(#platformMenuDelegate),
        returnValue: _FakePlatformMenuDelegate_1(
          this,
          Invocation.getter(#platformMenuDelegate),
        ),
      ) as _i3.PlatformMenuDelegate);

  @override
  set platformMenuDelegate(_i3.PlatformMenuDelegate? _platformMenuDelegate) =>
      super.noSuchMethod(
        Invocation.setter(
          #platformMenuDelegate,
          _platformMenuDelegate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get debugBuildingDirtyElements => (super.noSuchMethod(
        Invocation.getter(#debugBuildingDirtyElements),
        returnValue: false,
      ) as bool);

  @override
  set debugBuildingDirtyElements(bool? _debugBuildingDirtyElements) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugBuildingDirtyElements,
          _debugBuildingDirtyElements,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get debugShowWidgetInspectorOverride => (super.noSuchMethod(
        Invocation.getter(#debugShowWidgetInspectorOverride),
        returnValue: false,
      ) as bool);

  @override
  set debugShowWidgetInspectorOverride(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #debugShowWidgetInspectorOverride,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.ValueNotifier<bool> get debugShowWidgetInspectorOverrideNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#debugShowWidgetInspectorOverrideNotifier),
        returnValue: _FakeValueNotifier_2<bool>(
          this,
          Invocation.getter(#debugShowWidgetInspectorOverrideNotifier),
        ),
      ) as _i4.ValueNotifier<bool>);

  @override
  _i4.ValueNotifier<bool> get debugWidgetInspectorSelectionOnTapEnabled =>
      (super.noSuchMethod(
        Invocation.getter(#debugWidgetInspectorSelectionOnTapEnabled),
        returnValue: _FakeValueNotifier_2<bool>(
          this,
          Invocation.getter(#debugWidgetInspectorSelectionOnTapEnabled),
        ),
      ) as _i4.ValueNotifier<bool>);

  @override
  bool get debugExcludeRootWidgetInspector => (super.noSuchMethod(
        Invocation.getter(#debugExcludeRootWidgetInspector),
        returnValue: false,
      ) as bool);

  @override
  set debugExcludeRootWidgetInspector(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #debugExcludeRootWidgetInspector,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.FocusManager get focusManager => (super.noSuchMethod(
        Invocation.getter(#focusManager),
        returnValue: _FakeFocusManager_3(
          this,
          Invocation.getter(#focusManager),
        ),
      ) as _i5.FocusManager);

  @override
  bool get firstFrameRasterized => (super.noSuchMethod(
        Invocation.getter(#firstFrameRasterized),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> get waitUntilFirstFrameRasterized => (super.noSuchMethod(
        Invocation.getter(#waitUntilFirstFrameRasterized),
        returnValue: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  bool get debugDidSendFirstFrameEvent => (super.noSuchMethod(
        Invocation.getter(#debugDidSendFirstFrameEvent),
        returnValue: false,
      ) as bool);

  @override
  bool get framesEnabled => (super.noSuchMethod(
        Invocation.getter(#framesEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get isRootWidgetAttached => (super.noSuchMethod(
        Invocation.getter(#isRootWidgetAttached),
        returnValue: false,
      ) as bool);

  @override
  _i6.SingletonFlutterWindow get window => (super.noSuchMethod(
        Invocation.getter(#window),
        returnValue: _FakeSingletonFlutterWindow_4(
          this,
          Invocation.getter(#window),
        ),
      ) as _i6.SingletonFlutterWindow);

  @override
  _i6.PlatformDispatcher get platformDispatcher => (super.noSuchMethod(
        Invocation.getter(#platformDispatcher),
        returnValue: _FakePlatformDispatcher_5(
          this,
          Invocation.getter(#platformDispatcher),
        ),
      ) as _i6.PlatformDispatcher);

  @override
  bool get locked => (super.noSuchMethod(
        Invocation.getter(#locked),
        returnValue: false,
      ) as bool);

  @override
  _i4.ValueNotifier<int?> get accessibilityFocus => (super.noSuchMethod(
        Invocation.getter(#accessibilityFocus),
        returnValue: _FakeValueNotifier_2<int?>(
          this,
          Invocation.getter(#accessibilityFocus),
        ),
      ) as _i4.ValueNotifier<int?>);

  @override
  _i7.HardwareKeyboard get keyboard => (super.noSuchMethod(
        Invocation.getter(#keyboard),
        returnValue: _FakeHardwareKeyboard_6(
          this,
          Invocation.getter(#keyboard),
        ),
      ) as _i7.HardwareKeyboard);

  @override
  _i7.KeyEventManager get keyEventManager => (super.noSuchMethod(
        Invocation.getter(#keyEventManager),
        returnValue: _FakeKeyEventManager_7(
          this,
          Invocation.getter(#keyEventManager),
        ),
      ) as _i7.KeyEventManager);

  @override
  _i7.BinaryMessenger get defaultBinaryMessenger => (super.noSuchMethod(
        Invocation.getter(#defaultBinaryMessenger),
        returnValue: _FakeBinaryMessenger_8(
          this,
          Invocation.getter(#defaultBinaryMessenger),
        ),
      ) as _i7.BinaryMessenger);

  @override
  _i6.ChannelBuffers get channelBuffers => (super.noSuchMethod(
        Invocation.getter(#channelBuffers),
        returnValue: _FakeChannelBuffers_9(
          this,
          Invocation.getter(#channelBuffers),
        ),
      ) as _i6.ChannelBuffers);

  @override
  _i7.RestorationManager get restorationManager => (super.noSuchMethod(
        Invocation.getter(#restorationManager),
        returnValue: _FakeRestorationManager_10(
          this,
          Invocation.getter(#restorationManager),
        ),
      ) as _i7.RestorationManager);

  @override
  _i16.SchedulingStrategy get schedulingStrategy => (super.noSuchMethod(
        Invocation.getter(#schedulingStrategy),
        returnValue: ({
          required int priority,
          required _i16.SchedulerBinding scheduler,
        }) =>
            false,
      ) as _i16.SchedulingStrategy);

  @override
  set schedulingStrategy(_i16.SchedulingStrategy? _schedulingStrategy) =>
      super.noSuchMethod(
        Invocation.setter(
          #schedulingStrategy,
          _schedulingStrategy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get transientCallbackCount => (super.noSuchMethod(
        Invocation.getter(#transientCallbackCount),
        returnValue: 0,
      ) as int);

  @override
  _i11.Future<void> get endOfFrame => (super.noSuchMethod(
        Invocation.getter(#endOfFrame),
        returnValue: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  bool get hasScheduledFrame => (super.noSuchMethod(
        Invocation.getter(#hasScheduledFrame),
        returnValue: false,
      ) as bool);

  @override
  _i16.SchedulerPhase get schedulerPhase => (super.noSuchMethod(
        Invocation.getter(#schedulerPhase),
        returnValue: _i16.SchedulerPhase.idle,
      ) as _i16.SchedulerPhase);

  @override
  Duration get currentFrameTimeStamp => (super.noSuchMethod(
        Invocation.getter(#currentFrameTimeStamp),
        returnValue: _FakeDuration_11(
          this,
          Invocation.getter(#currentFrameTimeStamp),
        ),
      ) as Duration);

  @override
  Duration get currentSystemFrameTimeStamp => (super.noSuchMethod(
        Invocation.getter(#currentSystemFrameTimeStamp),
        returnValue: _FakeDuration_11(
          this,
          Invocation.getter(#currentSystemFrameTimeStamp),
        ),
      ) as Duration);

  @override
  _i8.PointerRouter get pointerRouter => (super.noSuchMethod(
        Invocation.getter(#pointerRouter),
        returnValue: _FakePointerRouter_12(
          this,
          Invocation.getter(#pointerRouter),
        ),
      ) as _i8.PointerRouter);

  @override
  _i8.GestureArenaManager get gestureArena => (super.noSuchMethod(
        Invocation.getter(#gestureArena),
        returnValue: _FakeGestureArenaManager_13(
          this,
          Invocation.getter(#gestureArena),
        ),
      ) as _i8.GestureArenaManager);

  @override
  _i8.PointerSignalResolver get pointerSignalResolver => (super.noSuchMethod(
        Invocation.getter(#pointerSignalResolver),
        returnValue: _FakePointerSignalResolver_14(
          this,
          Invocation.getter(#pointerSignalResolver),
        ),
      ) as _i8.PointerSignalResolver);

  @override
  bool get resamplingEnabled => (super.noSuchMethod(
        Invocation.getter(#resamplingEnabled),
        returnValue: false,
      ) as bool);

  @override
  set resamplingEnabled(bool? _resamplingEnabled) => super.noSuchMethod(
        Invocation.setter(
          #resamplingEnabled,
          _resamplingEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get samplingOffset => (super.noSuchMethod(
        Invocation.getter(#samplingOffset),
        returnValue: _FakeDuration_11(
          this,
          Invocation.getter(#samplingOffset),
        ),
      ) as Duration);

  @override
  set samplingOffset(Duration? _samplingOffset) => super.noSuchMethod(
        Invocation.setter(
          #samplingOffset,
          _samplingOffset,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.SamplingClock get samplingClock => (super.noSuchMethod(
        Invocation.getter(#samplingClock),
        returnValue: _FakeSamplingClock_15(
          this,
          Invocation.getter(#samplingClock),
        ),
      ) as _i8.SamplingClock);

  @override
  _i9.PipelineOwner get pipelineOwner => (super.noSuchMethod(
        Invocation.getter(#pipelineOwner),
        returnValue: _i17.dummyValue<_i9.PipelineOwner>(
          this,
          Invocation.getter(#pipelineOwner),
        ),
      ) as _i9.PipelineOwner);

  @override
  _i9.RenderView get renderView => (super.noSuchMethod(
        Invocation.getter(#renderView),
        returnValue: _FakeRenderView_16(
          this,
          Invocation.getter(#renderView),
        ),
      ) as _i9.RenderView);

  @override
  _i9.MouseTracker get mouseTracker => (super.noSuchMethod(
        Invocation.getter(#mouseTracker),
        returnValue: _FakeMouseTracker_17(
          this,
          Invocation.getter(#mouseTracker),
        ),
      ) as _i9.MouseTracker);

  @override
  _i9.PipelineOwner get rootPipelineOwner => (super.noSuchMethod(
        Invocation.getter(#rootPipelineOwner),
        returnValue: _i17.dummyValue<_i9.PipelineOwner>(
          this,
          Invocation.getter(#rootPipelineOwner),
        ),
      ) as _i9.PipelineOwner);

  @override
  Iterable<_i9.RenderView> get renderViews => (super.noSuchMethod(
        Invocation.getter(#renderViews),
        returnValue: <_i9.RenderView>[],
      ) as Iterable<_i9.RenderView>);

  @override
  bool get sendFramesToEngine => (super.noSuchMethod(
        Invocation.getter(#sendFramesToEngine),
        returnValue: false,
      ) as bool);

  @override
  bool get semanticsEnabled => (super.noSuchMethod(
        Invocation.getter(#semanticsEnabled),
        returnValue: false,
      ) as bool);

  @override
  int get debugOutstandingSemanticsHandles => (super.noSuchMethod(
        Invocation.getter(#debugOutstandingSemanticsHandles),
        returnValue: 0,
      ) as int);

  @override
  _i6.AccessibilityFeatures get accessibilityFeatures => (super.noSuchMethod(
        Invocation.getter(#accessibilityFeatures),
        returnValue: _FakeAccessibilityFeatures_18(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
      ) as _i6.AccessibilityFeatures);

  @override
  bool get disableAnimations => (super.noSuchMethod(
        Invocation.getter(#disableAnimations),
        returnValue: false,
      ) as bool);

  @override
  void initInstances() => super.noSuchMethod(
        Invocation.method(
          #initInstances,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetInternalState() => super.noSuchMethod(
        Invocation.method(
          #resetInternalState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initServiceExtensions() => super.noSuchMethod(
        Invocation.method(
          #initServiceExtensions,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addObserver(_i15.WidgetsBindingObserver? observer) => super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeObserver(_i15.WidgetsBindingObserver? observer) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<_i6.AppExitResponse> handleRequestAppExit() =>
      (super.noSuchMethod(
        Invocation.method(
          #handleRequestAppExit,
          [],
        ),
        returnValue:
            _i11.Future<_i6.AppExitResponse>.value(_i6.AppExitResponse.exit),
      ) as _i11.Future<_i6.AppExitResponse>);

  @override
  void handleMetricsChanged() => super.noSuchMethod(
        Invocation.method(
          #handleMetricsChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleTextScaleFactorChanged() => super.noSuchMethod(
        Invocation.method(
          #handleTextScaleFactorChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handlePlatformBrightnessChanged() => super.noSuchMethod(
        Invocation.method(
          #handlePlatformBrightnessChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleAccessibilityFeaturesChanged() => super.noSuchMethod(
        Invocation.method(
          #handleAccessibilityFeaturesChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLocaleChanged() => super.noSuchMethod(
        Invocation.method(
          #handleLocaleChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchLocalesChanged(List<_i6.Locale>? locales) => super.noSuchMethod(
        Invocation.method(
          #dispatchLocalesChanged,
          [locales],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchAccessibilityFeaturesChanged() => super.noSuchMethod(
        Invocation.method(
          #dispatchAccessibilityFeaturesChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<bool> handlePopRoute() => (super.noSuchMethod(
        Invocation.method(
          #handlePopRoute,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> handlePushRoute(String? route) => (super.noSuchMethod(
        Invocation.method(
          #handlePushRoute,
          [route],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  void handleAppLifecycleStateChanged(_i6.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #handleAppLifecycleStateChanged,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleViewFocusChanged(_i6.ViewFocusEvent? event) => super.noSuchMethod(
        Invocation.method(
          #handleViewFocusChanged,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleMemoryPressure() => super.noSuchMethod(
        Invocation.method(
          #handleMemoryPressure,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void drawFrame() => super.noSuchMethod(
        Invocation.method(
          #drawFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Widget wrapWithDefaultView(_i10.Widget? rootWidget) =>
      (super.noSuchMethod(
        Invocation.method(
          #wrapWithDefaultView,
          [rootWidget],
        ),
        returnValue: _FakeWidget_19(
          this,
          Invocation.method(
            #wrapWithDefaultView,
            [rootWidget],
          ),
        ),
      ) as _i10.Widget);

  @override
  void scheduleAttachRootWidget(_i10.Widget? rootWidget) => super.noSuchMethod(
        Invocation.method(
          #scheduleAttachRootWidget,
          [rootWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void attachRootWidget(_i10.Widget? rootWidget) => super.noSuchMethod(
        Invocation.method(
          #attachRootWidget,
          [rootWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void attachToBuildOwner(_i15.RootWidget? widget) => super.noSuchMethod(
        Invocation.method(
          #attachToBuildOwner,
          [widget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> performReassemble() => (super.noSuchMethod(
        Invocation.method(
          #performReassemble,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i6.Locale? computePlatformResolvedLocale(
          List<_i6.Locale>? supportedLocales) =>
      (super.noSuchMethod(Invocation.method(
        #computePlatformResolvedLocale,
        [supportedLocales],
      )) as _i6.Locale?);

  @override
  bool debugCheckZone(String? entryPoint) => (super.noSuchMethod(
        Invocation.method(
          #debugCheckZone,
          [entryPoint],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> lockEvents(_i11.Future<void> Function()? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #lockEvents,
          [callback],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void unlocked() => super.noSuchMethod(
        Invocation.method(
          #unlocked,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> reassembleApplication() => (super.noSuchMethod(
        Invocation.method(
          #reassembleApplication,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void registerSignalServiceExtension({
    required String? name,
    required _i4.AsyncCallback? callback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerSignalServiceExtension,
          [],
          {
            #name: name,
            #callback: callback,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerBoolServiceExtension({
    required String? name,
    required _i4.AsyncValueGetter<bool>? getter,
    required _i4.AsyncValueSetter<bool>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerBoolServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerNumericServiceExtension({
    required String? name,
    required _i4.AsyncValueGetter<double>? getter,
    required _i4.AsyncValueSetter<double>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerNumericServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void postEvent(
    String? eventKind,
    Map<String, dynamic>? eventData,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #postEvent,
          [
            eventKind,
            eventData,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerStringServiceExtension({
    required String? name,
    required _i4.AsyncValueGetter<String>? getter,
    required _i4.AsyncValueSetter<String>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerStringServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerServiceExtension({
    required String? name,
    required _i4.ServiceExtensionCallback? callback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerServiceExtension,
          [],
          {
            #name: name,
            #callback: callback,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.BinaryMessenger createBinaryMessenger() => (super.noSuchMethod(
        Invocation.method(
          #createBinaryMessenger,
          [],
        ),
        returnValue: _FakeBinaryMessenger_8(
          this,
          Invocation.method(
            #createBinaryMessenger,
            [],
          ),
        ),
      ) as _i7.BinaryMessenger);

  @override
  _i11.Future<void> handleSystemMessage(Object? systemMessage) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSystemMessage,
          [systemMessage],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void initLicenses() => super.noSuchMethod(
        Invocation.method(
          #initLicenses,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void evict(String? asset) => super.noSuchMethod(
        Invocation.method(
          #evict,
          [asset],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void readInitialLifecycleStateFromNativeWindow() => super.noSuchMethod(
        Invocation.method(
          #readInitialLifecycleStateFromNativeWindow,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<_i6.AppExitResponse> exitApplication(
    _i6.AppExitType? exitType, [
    int? exitCode = 0,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #exitApplication,
          [
            exitType,
            exitCode,
          ],
        ),
        returnValue:
            _i11.Future<_i6.AppExitResponse>.value(_i6.AppExitResponse.exit),
      ) as _i11.Future<_i6.AppExitResponse>);

  @override
  _i7.RestorationManager createRestorationManager() => (super.noSuchMethod(
        Invocation.method(
          #createRestorationManager,
          [],
        ),
        returnValue: _FakeRestorationManager_10(
          this,
          Invocation.method(
            #createRestorationManager,
            [],
          ),
        ),
      ) as _i7.RestorationManager);

  @override
  void setSystemUiChangeCallback(_i7.SystemUiChangeCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setSystemUiChangeCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> initializationComplete() => (super.noSuchMethod(
        Invocation.method(
          #initializationComplete,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void addTimingsCallback(_i6.TimingsCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #addTimingsCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeTimingsCallback(_i6.TimingsCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #removeTimingsCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<T> scheduleTask<T>(
    _i16.TaskCallback<T>? task,
    _i16.Priority? priority, {
    String? debugLabel,
    _i18.Flow? flow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleTask,
          [
            task,
            priority,
          ],
          {
            #debugLabel: debugLabel,
            #flow: flow,
          },
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #scheduleTask,
                  [
                    task,
                    priority,
                  ],
                  {
                    #debugLabel: debugLabel,
                    #flow: flow,
                  },
                ),
              ),
              (T v) => _i11.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #scheduleTask,
                [
                  task,
                  priority,
                ],
                {
                  #debugLabel: debugLabel,
                  #flow: flow,
                },
              ),
            ),
      ) as _i11.Future<T>);

  @override
  bool handleEventLoopCallback() => (super.noSuchMethod(
        Invocation.method(
          #handleEventLoopCallback,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  int scheduleFrameCallback(
    _i16.FrameCallback? callback, {
    bool? rescheduling = false,
    bool? scheduleNewFrame = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleFrameCallback,
          [callback],
          {
            #rescheduling: rescheduling,
            #scheduleNewFrame: scheduleNewFrame,
          },
        ),
        returnValue: 0,
      ) as int);

  @override
  void cancelFrameCallbackWithId(int? id) => super.noSuchMethod(
        Invocation.method(
          #cancelFrameCallbackWithId,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool debugAssertNoTransientCallbacks(String? reason) => (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoTransientCallbacks,
          [reason],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool debugAssertNoPendingPerformanceModeRequests(String? reason) =>
      (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoPendingPerformanceModeRequests,
          [reason],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool debugAssertNoTimeDilation(String? reason) => (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoTimeDilation,
          [reason],
        ),
        returnValue: false,
      ) as bool);

  @override
  void addPersistentFrameCallback(_i16.FrameCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #addPersistentFrameCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addPostFrameCallback(
    _i16.FrameCallback? callback, {
    String? debugLabel = r'callback',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addPostFrameCallback,
          [callback],
          {#debugLabel: debugLabel},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void ensureFrameCallbacksRegistered() => super.noSuchMethod(
        Invocation.method(
          #ensureFrameCallbacksRegistered,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void ensureVisualUpdate() => super.noSuchMethod(
        Invocation.method(
          #ensureVisualUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleForcedFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleForcedFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleWarmUpFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleWarmUpFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetEpoch() => super.noSuchMethod(
        Invocation.method(
          #resetEpoch,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleBeginFrame(Duration? rawTimeStamp) => super.noSuchMethod(
        Invocation.method(
          #handleBeginFrame,
          [rawTimeStamp],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.PerformanceModeRequestHandle? requestPerformanceMode(
          _i6.DartPerformanceMode? mode) =>
      (super.noSuchMethod(Invocation.method(
        #requestPerformanceMode,
        [mode],
      )) as _i16.PerformanceModeRequestHandle?);

  @override
  void handleDrawFrame() => super.noSuchMethod(
        Invocation.method(
          #handleDrawFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelPointer(int? pointer) => super.noSuchMethod(
        Invocation.method(
          #cancelPointer,
          [pointer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handlePointerEvent(_i8.PointerEvent? event) => super.noSuchMethod(
        Invocation.method(
          #handlePointerEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void hitTestInView(
    _i8.HitTestResult? result,
    _i6.Offset? position,
    int? viewId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #hitTestInView,
          [
            result,
            position,
            viewId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void hitTest(
    _i8.HitTestResult? result,
    _i6.Offset? position,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #hitTest,
          [
            result,
            position,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchEvent(
    _i8.PointerEvent? event,
    _i8.HitTestResult? hitTestResult,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #dispatchEvent,
          [
            event,
            hitTestResult,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleEvent(
    _i8.PointerEvent? event,
    _i8.HitTestEntry<_i8.HitTestTarget>? entry,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #handleEvent,
          [
            event,
            entry,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetGestureBinding() => super.noSuchMethod(
        Invocation.method(
          #resetGestureBinding,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.PipelineOwner createRootPipelineOwner() => (super.noSuchMethod(
        Invocation.method(
          #createRootPipelineOwner,
          [],
        ),
        returnValue: _i17.dummyValue<_i9.PipelineOwner>(
          this,
          Invocation.method(
            #createRootPipelineOwner,
            [],
          ),
        ),
      ) as _i9.PipelineOwner);

  @override
  void addRenderView(_i9.RenderView? view) => super.noSuchMethod(
        Invocation.method(
          #addRenderView,
          [view],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRenderView(_i9.RenderView? view) => super.noSuchMethod(
        Invocation.method(
          #removeRenderView,
          [view],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.ViewConfiguration createViewConfigurationFor(
          _i9.RenderView? renderView) =>
      (super.noSuchMethod(
        Invocation.method(
          #createViewConfigurationFor,
          [renderView],
        ),
        returnValue: _FakeViewConfiguration_21(
          this,
          Invocation.method(
            #createViewConfigurationFor,
            [renderView],
          ),
        ),
      ) as _i9.ViewConfiguration);

  @override
  _i6.SceneBuilder createSceneBuilder() => (super.noSuchMethod(
        Invocation.method(
          #createSceneBuilder,
          [],
        ),
        returnValue: _FakeSceneBuilder_22(
          this,
          Invocation.method(
            #createSceneBuilder,
            [],
          ),
        ),
      ) as _i6.SceneBuilder);

  @override
  _i6.PictureRecorder createPictureRecorder() => (super.noSuchMethod(
        Invocation.method(
          #createPictureRecorder,
          [],
        ),
        returnValue: _FakePictureRecorder_23(
          this,
          Invocation.method(
            #createPictureRecorder,
            [],
          ),
        ),
      ) as _i6.PictureRecorder);

  @override
  _i6.Canvas createCanvas(_i6.PictureRecorder? recorder) => (super.noSuchMethod(
        Invocation.method(
          #createCanvas,
          [recorder],
        ),
        returnValue: _FakeCanvas_24(
          this,
          Invocation.method(
            #createCanvas,
            [recorder],
          ),
        ),
      ) as _i6.Canvas);

  @override
  void initMouseTracker([_i9.MouseTracker? tracker]) => super.noSuchMethod(
        Invocation.method(
          #initMouseTracker,
          [tracker],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void performSemanticsAction(_i6.SemanticsActionEvent? action) =>
      super.noSuchMethod(
        Invocation.method(
          #performSemanticsAction,
          [action],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deferFirstFrame() => super.noSuchMethod(
        Invocation.method(
          #deferFirstFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void allowFirstFrame() => super.noSuchMethod(
        Invocation.method(
          #allowFirstFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetFirstFrameSent() => super.noSuchMethod(
        Invocation.method(
          #resetFirstFrameSent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addSemanticsEnabledListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addSemanticsEnabledListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeSemanticsEnabledListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeSemanticsEnabledListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addSemanticsActionListener(
          _i4.ValueSetter<_i6.SemanticsActionEvent>? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addSemanticsActionListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeSemanticsActionListener(
          _i4.ValueSetter<_i6.SemanticsActionEvent>? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeSemanticsActionListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.SemanticsHandle ensureSemantics() => (super.noSuchMethod(
        Invocation.method(
          #ensureSemantics,
          [],
        ),
        returnValue: _FakeSemanticsHandle_25(
          this,
          Invocation.method(
            #ensureSemantics,
            [],
          ),
        ),
      ) as _i9.SemanticsHandle);

  @override
  _i6.SemanticsUpdateBuilder createSemanticsUpdateBuilder() =>
      (super.noSuchMethod(
        Invocation.method(
          #createSemanticsUpdateBuilder,
          [],
        ),
        returnValue: _FakeSemanticsUpdateBuilder_26(
          this,
          Invocation.method(
            #createSemanticsUpdateBuilder,
            [],
          ),
        ),
      ) as _i6.SemanticsUpdateBuilder);
}
