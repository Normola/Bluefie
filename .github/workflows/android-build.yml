name: Android Build Pipeline

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '11'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Analyze code
        run: flutter analyze

      - name: Format check
        run: dart format --set-exit-if-changed .

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' || github.event_name != 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 30

  build-release:
    name: Build Release APK/AAB
    runs-on: ubuntu-latest
    needs: test
    if: github.event.inputs.build_type == 'release' || (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Setup signing (if keystore available)
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "Setting up release signing..."
            echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
            cat > android/key.properties << EOF
          storePassword=$KEYSTORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=$KEY_ALIAS
          storeFile=keystore.jks
          EOF
          else
            echo "No keystore found. Building with debug signing."
          fi

      - name: Build release APK
        run: flutter build apk --release

      - name: Build release AAB
        run: flutter build appbundle --release

      - name: Upload release APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 90

      - name: Upload release AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 90

  build-profile:
    name: Build Profile APK
    runs-on: ubuntu-latest
    needs: test
    if: github.event.inputs.build_type == 'profile' || github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build profile APK
        run: flutter build apk --profile

      - name: Upload profile APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: profile-apk
          path: build/app/outputs/flutter-apk/app-profile.apk
          retention-days: 30

  size-analysis:
    name: App Size Analysis
    runs-on: ubuntu-latest
    needs: [build-debug, build-release]
    if: always() && (needs.build-debug.result == 'success' || needs.build-release.result == 'success')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download debug APK
        if: needs.build-debug.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: ./artifacts/debug/

      - name: Download release APK
        if: needs.build-release.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: ./artifacts/release/

      - name: Analyze APK sizes
        run: |
          echo "## APK Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "| Build Type | APK Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|----------|" >> $GITHUB_STEP_SUMMARY

          if [ -f "./artifacts/debug/app-debug.apk" ]; then
            DEBUG_SIZE=$(stat -c%s "./artifacts/debug/app-debug.apk" | numfmt --to=iec)
            echo "| Debug | $DEBUG_SIZE |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -f "./artifacts/release/app-release.apk" ]; then
            RELEASE_SIZE=$(stat -c%s "./artifacts/release/app-release.apk" | numfmt --to=iec)
            echo "| Release | $RELEASE_SIZE |" >> $GITHUB_STEP_SUMMARY
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-release
    if: needs.build-release.result == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Run security audit
        run: |
          dart pub deps --json > deps.json
          echo "## Security Audit" >> $GITHUB_STEP_SUMMARY
          echo "Dependency scan completed. Review deps.json for detailed information." >> $GITHUB_STEP_SUMMARY

      - name: Upload dependency information
        uses: actions/upload-artifact@v4
        with:
          name: dependency-scan
          path: deps.json
          retention-days: 30
