name: Flutter Compatibility Matrix

on:
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      flutter_versions:
        description: 'Flutter versions to test (comma-separated)'
        required: false
        default: '3.22.0,3.24.3,stable'

env:
  JAVA_VERSION: '17'

jobs:
  compatibility-matrix:
    name: Test Flutter ${{ matrix.flutter-version }}
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix:
        flutter-version:
          - '3.22.0'  # Previous stable
          - '3.24.3'  # Current stable
          - 'stable'  # Latest stable
          - 'beta'    # Beta channel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Get Flutter dependencies
        run: flutter pub get
        continue-on-error: true

      - name: Check for dependency conflicts
        id: deps_check
        run: |
          if ! flutter pub get; then
            echo "❌ Dependency resolution failed for Flutter ${{ matrix.flutter-version }}"
            echo "dependency_status=failed" >> $GITHUB_OUTPUT
          else
            echo "✅ Dependencies resolved successfully"
            echo "dependency_status=success" >> $GITHUB_OUTPUT
          fi

      - name: Run analysis
        if: steps.deps_check.outputs.dependency_status == 'success'
        run: flutter analyze
        continue-on-error: true

      - name: Run tests
        if: steps.deps_check.outputs.dependency_status == 'success'
        run: flutter test --reporter=github
        continue-on-error: true

      - name: Test build
        if: steps.deps_check.outputs.dependency_status == 'success'
        run: flutter build apk --debug
        continue-on-error: true

      - name: Report results
        run: |
          echo "## Flutter ${{ matrix.flutter-version }} Compatibility Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependencies**: ${{ steps.deps_check.outputs.dependency_status }}" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.deps_check.outputs.dependency_status }}" == "success" ]; then
            echo "- **Analysis**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
            echo "- **Tests**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
            echo "- **Build**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Analysis**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
            echo "- **Tests**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
            echo "- **Build**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi

  summary:
    name: Compatibility Summary
    runs-on: ubuntu-latest
    needs: compatibility-matrix
    if: always()

    steps:
      - name: Create summary
        run: |
          echo "# 🧪 Flutter Compatibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This workflow tests the project against multiple Flutter versions to ensure compatibility." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Tested Versions" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter 3.22.0 (Previous stable)" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter 3.24.3 (Current stable)" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter stable (Latest stable)" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter beta (Beta channel)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check individual job results for detailed compatibility information." >> $GITHUB_STEP_SUMMARY

      - name: Check if any jobs failed
        run: |
          # This step would typically check the results and potentially create issues
          # For now, it just logs the completion
          echo "Compatibility matrix testing completed"

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Flutter Compatibility Issues Detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `## Flutter Compatibility Test Failures

            The weekly compatibility test has detected issues with one or more Flutter versions.

            **Action Required:**
            1. Review the [failed workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            2. Check for dependency conflicts or breaking changes
            3. Update dependencies if necessary
            4. Test locally with failing Flutter versions

            **Auto-generated on:** ${new Date().toISOString()}`;

            // Check if issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['flutter-compatibility'],
              state: 'open'
            });

            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['flutter-compatibility', 'bug']
              });
            }
